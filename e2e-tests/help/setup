#!/bin/bash

set -e -x

warn() {
    echo "$1"
    exit 1
}

# Normally we use this to verify we are getting an exit code of 1
# This protects us from hiding problems like a panic (exit 2).
run_and_verify() {
    expected=$1
    exit_code=0
    shift
    $TB "$@" || exit_code=$?

    if [ $exit_code -ne $expected ]; then
        echo "Test failed with error code: $exit_code, expected $expected."
        exit 1
    fi
}

TB=./toobig

rm -fr x

mkdir x
mkdir x/{data,data2,blobs,blobs2,refs,refs2,dup}

cat <<EOF >x/update.cfg
{
"file_path": "data",
"ref_path": "refs",
"blob_path": "blobs",
"dup_path": "dup"
}
EOF
